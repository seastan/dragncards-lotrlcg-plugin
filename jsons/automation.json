{
    "automation": {
        "postNewGameActionList": [
            ["PROMPT", "player1", "setPlayerCount"]
        ],
        "postLoadActionList": [
            ["VAR", "$LOADED_PLAYER_DECK", false],
            ["VAR", "$LOADED_ENCOUNTER_DECK_2", false],
            ["VAR", "$THREAT_RAISE", 0],
            ["FOR_EACH_VAL", "$CARD_ID", "$GAME.loadedCardIds", [
                ["VAR", "$CARD", "$GAME.cardById.$CARD_ID"],
                ["COND", 
                    ["AND", 
                        ["EQUAL", "$CARD.sides.A.type", "Hero"],
                        ["EQUAL", "$CARD.inPlay", true],
                        ["NOT_EQUAL", "$CARD.controller", "shared"]
                    ],
                    [
                        ["UPDATE_VAR", "$LOADED_PLAYER_DECK", true],
                        ["VAR", "$CONTROLLER", "$CARD.controller"],
                        ["INCREASE_VAR", "$THREAT_RAISE", "$CARD.sides.A.cost"],
                        ["SET", "/playerData/$CONTROLLER/threat", 0]
                    ]
                ],
                ["COND",
                    ["IN_STRING", "$CARD.groupId", "Play1"],
                    [
                        ["SET", "/cardById/$CARD_ID/deckGroupId", ["JOIN_STRING", "$PLAYER_N", "Deck"]],
                        ["SET", "/cardById/$CARD_ID/discardGroupId", ["JOIN_STRING", "$PLAYER_N", "Discard"]]
                    ],
                    ["IN_LIST", ["LIST", "sharedStagingArea", "sharedActiveLocation"], "$CARD.groupId"],
                    [
                        ["SET", "/cardById/$CARD_ID/deckGroupId", "sharedEncounterDeck"],
                        ["SET", "/cardById/$CARD_ID/discardGroupId", "sharedEncounterDiscard"]
                    ]
                ],
                ["COND",
                    ["EQUAL", "$CARD.groupId", "sharedEncounterDeck2"],
                    ["SHOW_ENCOUNTER_DECK_2", true]
                ],
                ["COND", 
                    ["AND", ["EQUAL", "$CARD.sides.A.type", "Quest"], ["EQUAL", "$CARD.sides.A.cost", 1]],
                    [
                        ["LOG", "$ALIAS_N", " made ", "$CARD.sides.A.name", " the main quest."],
                        ["MOVE_CARD", "$CARD_ID", "sharedMainQuest", 0]
                    ]
                ]
            ]],
            ["COND",
                "$LOADED_PLAYER_DECK",
                [
                    ["LOG", "$ALIAS_N", " set their starting threat to ", "$THREAT_RAISE", "."],
                    ["SET", "/playerData/$PLAYER_N/threat", "$THREAT_RAISE"]
                ]
            ],
            ["COND",
                ["AND", "$LOADED_PLAYER_DECK", ["EQUAL", "$GAME.roundNumber", 0], ["EQUAL", ["LENGTH", "$GAME.groupById.{{$PLAYER_N}}Hand.stackIds"], 0]],
                [
                    ["LOG", "$ALIAS_N", " draws 6 cards."],
                    ["DRAW_CARD", 6]
                ]
            ],
            ["SET", "/allPlayerDecksLoaded", true],
            ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                ["COND", 
                    ["EQUAL", ["LENGTH", "$GAME.groupById.{{$PLAYER_I}}Deck.stackIds"], 0], 
                    ["SET", "/allPlayerDecksLoaded", false]
                ] 
            ]]
        ],
        "gameRules": {
            "hideButtonVisibility": {
                "_comment": "Hide the visibility of the advance button",
                "type": "trigger",
                "listenTo": ["/gameStepAutomation"],
                "condition": ["TRUE"],
                "then": ["COND",
                    ["EQUAL", "$GAME.gameStepAutomation", false],
                    ["UPDATE_LAYOUT", "/layout/textBoxes/roundAdvancement/visible", false],
                    ["TRUE"],
                    ["UPDATE_LAYOUT", "/layout/textBoxes/roundAdvancement/visible", true]
                ]
            },
            "updateAdvanceButton": {
                "_comment": "Update the advance button",
                "type": "trigger",
                "listenTo": ["/stepId"],
                "condition": ["TRUE"],
                "then": ["UPDATE_ADVANCE_BUTTON"],
                "priority": 2
            },
            "updateAdvanceButtonText": {
                "_comment": "Update the advance button",
                "type": "trigger",
                "listenTo": ["/roundAdvancementFunction"],
                "condition": ["TRUE"],
                "then": ["COND",
                    ["EQUAL", "$GAME.roundAdvancementFunction", "goToFirstPlanning"],
                    ["SET", "/textBoxById/roundAdvancement/content", "Press W to advance to first planning phase."],
                    ["EQUAL", "$GAME.roundAdvancementFunction", "readyForNextPlanning"],
                    ["SET", "/textBoxById/roundAdvancement/content", "Do actions, then press W to advance to next planning."],
                    ["EQUAL", "$GAME.roundAdvancementFunction", "selectCurrentQuest"],
                    ["SET", "/textBoxById/roundAdvancement/content", "After action window, use Q to pick current quest."],
                    ["EQUAL", "$GAME.roundAdvancementFunction", "commitCharacters"],
                    ["SET", "/textBoxById/roundAdvancement/content", "After action window, use Q to commit character(s)."],
                    ["EQUAL", "$GAME.roundAdvancementFunction", "commitOrReveal"],
                    ["SET", "/textBoxById/roundAdvancement/content", "Q to commit characters, then E to reveal encounter."],
                    ["EQUAL", "$GAME.roundAdvancementFunction", "revealOrResolve"],
                    ["SET", "/textBoxById/roundAdvancement/content", "After revealing encounters, use W to auto-resolve quest."],
                    ["EQUAL", "$GAME.roundAdvancementFunction", "advanceToTravel"],
                    ["SET", "/textBoxById/roundAdvancement/content", "Use A to make a location active or press W decline."],
                    ["EQUAL", "$GAME.roundAdvancementFunction", "advanceToEncounter"],
                    ["SET", "/textBoxById/roundAdvancement/content", "After action window, W to advance to encounter phase."],
                    ["EQUAL", "$GAME.roundAdvancementFunction", "resolveEngagementChecks"],
                    ["SET", "/textBoxById/roundAdvancement/content", "Drag: Optionally engage. W: Perform engagement checks."],
                    ["EQUAL", "$GAME.roundAdvancementFunction", "advanceToCombat"],
                    ["SET", "/textBoxById/roundAdvancement/content", "W: Advance to enemy attacks."]
                ]
            },
            "updateAdvanceButtonOnCardEnterPlay": {
                "type": "trigger",
                "listenTo": ["/cardById/*/inPlay"],
                "condition": ["TRUE"],
                "then": ["COND",
                    ["AND",
                        ["EQUAL", "$GAME.roundAdvancementFunction", "commitCharacters"],
                        ["EQUAL", "$TARGET.sides.A.type", "Side Quest"]
                    ],
                    ["UPDATE_ADVANCE_BUTTON"]
                ]
            },
            "updateAdvanceButtonOnCardMove": {
                "type": "trigger",
                "listenTo": ["/cardById/*/groupId"],
                "condition": ["TRUE"],
                "then": ["COND",
                    ["AND",
                        ["EQUAL", "$GAME.roundAdvancementFunction", "readyForNextPlanning"],
                        ["ENEMIES_ARE_ENGAGED"]
                    ],
                    ["UPDATE_ADVANCE_BUTTON"]
                ]
            },
            "step_0.0": {
                "_comment": "Trigger start of round framework effects",
                "type": "trigger",
                "listenTo": ["/stepId"],
                "condition": ["EQUAL", "$GAME.stepId", "0.0"],
                "then": [
                    ["LOG", "{{$ALIAS_N}} started round {{$GAME.roundNumber}}."],
                    ["INCREASE_VAL", "/roundNumber", 1]
                ]
            },
            "step_1.R": {
                "_comment": "Trigger resource phase framework effects",
                "type": "trigger",
                "listenTo": ["/stepId"],
                "condition": ["EQUAL", "$GAME.stepId", "1.R"],
                "then": [
                    ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                        ["VAR", "$NUM_DRAWN", "$PLAYER_DATA.$PLAYER_I.cardsDrawn"],
                        ["LOG", "├── ", ["GET_ALIAS", "$PLAYER_I"], " draws {{$NUM_DRAWN}} card(s)."],
                        ["DRAW_CARD", "$NUM_DRAWN", "$PLAYER_I"]
                    ]],
                    ["LOG", "└── ", "Each hero gains 1 resource."],
                    ["FOR_EACH_KEY_VAL", "$CARD_ID", "$CARD", "$GAME.cardById", [
                        ["COND",
                            ["AND", "$CARD.inPlay", ["EQUAL", "$CARD.currentFace.type", "Hero"]],
                            ["INCREASE_VAL", "/cardById/$CARD_ID/tokens/resource", 1]
                        ]
                    ]]
                ]
            },
            "step_2.P": {
                "_comment": "Special planning action window",
                "type": "trigger",
                "listenTo": ["/stepId"],
                "condition": ["EQUAL", "$GAME.stepId", "2.P"],
                "then": [
                    ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                        ["SET", "/playerData/$PLAYER_I/readyForNextPlanning", true],
                        ["UPDATE_LAYOUT", "/layout/regions/{{$PLAYER_I}}Play1/style", {}]
                    ]]
                ]
            },
            "step_3.4": {
                "_comment": "Resolve the quest",
                "type": "trigger",
                "listenTo": ["/stepId"],
                "condition": ["EQUAL", "$GAME.stepId", "3.4"],
                "then": [
                    ["VAR", "$PROGRESS_MADE", "$GAME.questProgress"],
                    ["COND",
                        ["EQUAL", "$PROGRESS_MADE", 0],
                        ["LOG", "The players did not quest successfully or unsuccessfully."],
                        ["GREATER_THAN", "$PROGRESS_MADE", 0],
                        [
                            ["LOG", "├── The players quested successfully."],
                            ["LOG", "├── The players made {{$PROGRESS_MADE}} progress."],
                            ["VAR", "$ACTIVE_LOCATIONS", ["FILTER_CARDS", "$C", ["AND", ["EQUAL", "$C.groupId", "sharedActiveLocation"], ["EQUAL", "$C.currentFace.type", "Location"]]]],
                            ["VAR", "$NUM_ACTIVE_LOCATIONS", ["LENGTH", "$ACTIVE_LOCATIONS"]],
                            ["COND",
                                ["GREATER_THAN", "$NUM_ACTIVE_LOCATIONS", 1],
                                ["LOG", "└── More than 1 active location detected. You will need to distribute the progress yourself."],
                                ["EQUAL", "$NUM_ACTIVE_LOCATIONS", 1],
                                [
                                    ["VAR", "$ACTIVE_LOCATION", "$ACTIVE_LOCATIONS.[0]"],
                                    ["VAR", "$REMAINING_LOCATION_PROGRESS", ["SUBTRACT", "$ACTIVE_LOCATION.currentFace.questPoints", "$ACTIVE_LOCATION.tokens.progress"]],
                                    ["LOG", "├── {{$PROGRESS_MADE}} progress was placed on the active location."],
                                    ["INCREASE_VAL", "/cardById/$ACTIVE_LOCATION.id/tokens/progress", ["MIN", ["LIST", "$REMAINING_LOCATION_PROGRESS", "$PROGRESS_MADE"]]],
                                    ["DECREASE_VAR", "$PROGRESS_MADE", "$REMAINING_LOCATION_PROGRESS"]
                                ]
                            ],
                            ["COND",
                                ["GREATER_THAN", "$PROGRESS_MADE", 0], 
                                [
                                    ["VAR", "$CURRENT_QUEST", ["GET_CURRENT_QUEST"]],
                                    ["VAR", "$REMAINING_QUEST_PROGRESS", ["SUBTRACT", "$CURRENT_QUEST.currentFace.questPoints", "$CURRENT_QUEST.tokens.progress"]],
                                    ["LOG", "└── {{$PROGRESS_MADE}} progress was placed on the current quest, {{$CURRENT_QUEST.currentFace.name}}."],
                                    ["INCREASE_VAL", "/cardById/$CURRENT_QUEST.id/tokens/progress", ["MIN", ["LIST", "$REMAINING_QUEST_PROGRESS", "$PROGRESS_MADE"]]]
                                ]
                            ]
                        ],
                        ["TRUE"],
                        [
                            ["VAR", "$THREAT_RAISE", ["SUBTRACT", 0, "$PROGRESS_MADE"]],
                            ["LOG", "├── The players quested unsuccessfully."],
                            ["LOG", "└── Each player raises their threat by {{$THREAT_RAISE}}."],
                            ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER",
                                ["INCREASE_VAL", "/playerData/$PLAYER_I/threat", "$THREAT_RAISE"]
                            ]
                        ],
                        ["FOR_EACH_KEY_VAL", "$CARD_ID", "$CARD", "$GAME.cardById", [
                            ["COND",
                                ["AND",
                                    "$CARD.committed",
                                    ["EQUAL", "$CARD.currentFace.type", "Hero"]
                                ],
                                [
                                    ["SET", "/cardById/$CARD_ID/committed", false],
                                    ["SET", "/cardById/$CARD_ID/tokens/questing", 0]
                                ]
                            ]
                        ]],
                        ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER",
                            ["SET", "/playerData/$PLAYER_I/willpower", 0]
                        ]
                    ]
                ]
            },
            "step_3.5": {
                "_comment": "Trigger end of quest phase framework effects",
                "type": "trigger",
                "listenTo": ["/stepId"],
                "condition": ["EQUAL", "$GAME.stepId", "3.5"],
                "then": [
                    ["LOG", "└── ", "All characters were removed from the quest."],
                    ["FOR_EACH_KEY_VAL", "$CARD_ID", "$CARD", "$CARD_BY_ID", [
                        ["COND",
                            ["EQUAL", "$CARD.committed", true],
                            [
                                ["SET", "/cardById/$CARD_ID/committed", false],
                                ["SET", "/cardById/$CARD_ID/tokens/questing", 0]
                            ]
                        ]
                    ]],
                    ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                        ["SET", "/playerData/$PLAYER_I/willpower", 0]
                    ]],
                    ["SET", "/currentQuestCardId", null]
                ]
            },
            "step_5.3": {
                "_comment": "Forced engagement checks",
                "type": "trigger",
                "listenTo": ["/stepId"],
                "condition": ["EQUAL", "$GAME.stepId", "5.3"],
                "then": [
                    ["VAR", "$CURRENT_PLAYER", "player1"],
                    ["WHILE", 
                        ["ENEMIES_IN_STAGING_AREA_FORCED"],
                        [
                            ["VAR", "$ALIAS_I", ["GET_ALIAS", "$CURRENT_PLAYER"]],
                            ["LOG", "├── {{$ALIAS_I}} makes engagement checks."],
                            ["VAR", "$CANDIDATES", ["FILTER_CARDS", "$C", [
                                "AND",
                                ["EQUAL", "$C.groupId", "sharedStagingArea"],
                                ["EQUAL", "$C.currentFace.type", "Enemy"],
                                ["GREATER_EQUAL", "$GAME.playerData.$CURRENT_PLAYER.threat", "$C.currentFace.engagementCost"]
                            ]]],
                            ["COND",
                                ["EQUAL", ["LENGTH", "$CANDIDATES"], 0],
                                ["LOG", "├── ", "{{$ALIAS_I}} has no enemies in the staging area that they must engage."],
                                ["TRUE"],
                                [
                                    ["VAR", "$ENEMIES_BY_ENG_COST", ["SORT_OBJ_LIST", "$CANDIDATES", "$C", "$C.currentFace.engagementCost"]],
                                    ["VAR", "$ENEMY_TO_ENGAGE", "$ENEMIES_BY_ENG_COST.[-1]"],
                                    ["LOG", "├── ", "{{$ALIAS_I}} engages ", "$ENEMY_TO_ENGAGE.currentFace.name", "."],
                                    ["MOVE_STACK", "$ENEMY_TO_ENGAGE.stackId", "{{$CURRENT_PLAYER}}Engaged", -1]
                                ]
                            ]
                        ],
                        ["UPDATE_VAR", "$CURRENT_PLAYER", ["NEXT_PLAYER", "$CURRENT_PLAYER"]]
                    ],
                    ["LOG", "└── ", "Engagement checks are complete."]
                ],
                "priority": 1
            },
            "step_6.1": {
                "_comment": "Deal shadow cards",
                "type": "trigger",
                "listenTo": ["/stepId"],
                "condition": ["EQUAL", "$GAME.stepId", "6.2"],
                "then": ["DEAL_SHADOW_CARDS"]
            },
            "step_7.R": {
                "_comment": "Trigger refresh phase framework effects",
                "type": "trigger",
                "listenTo": ["/stepId"],
                "condition": ["EQUAL", "$GAME.stepId", "7.R"],
                "then": [
                    ["VAR", "$NEXT_PLAYER", ["NEXT_PLAYER", "$GAME.firstPlayer"]],
                    ["LOG", "├── The first player is now {{$NEXT_PLAYER}}"],
                    ["SET", "/firstPlayer", "$NEXT_PLAYER"],
                    ["LOG", "├── Readied all cards in play."],
                    ["FOR_EACH_KEY_VAL", "$CARD_ID", "$CARD", "$CARD_BY_ID", [
                        ["COND",
                            ["AND",
                                ["EQUAL", "$CARD.inPlay", true],
                                ["NOT_EQUAL", "$CARD.preventRefresh", true]
                            ],
                            [
                                ["SET", "/cardById/$CARD_ID/rotation", 0],
                                ["SET", "/cardById/$CARD_ID/exhausted", false]
                            ]
                        ]
                    ]],    
                    ["LOG", "└── ", "Each player increased their threat by 1."],        
                    ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER",
                        ["INCREASE_VAL", "/playerData/$PLAYER_I/threat", 1]
                    ]
                ]
            },
            "triggerGameStepEffects": {
                "_comment": "Trigger card effects for a given game step",
                "type": "trigger",
                "listenTo": ["/stepId"],
                "condition": ["TRUE"],
                "then": ["FOR_EACH_KEY_VAL", "$CARD_ID", "$CARD", "$GAME.cardById", [
                    ["COND",
                        ["AND",
                            ["DEFINED", "$CARD.currentFace.gameStepEffects.{{$GAME.stepId}}"],
                            ["EQUAL", "$CARD.currentFace.gameStepEffects.{{$GAME.stepId}}.enabled", true]
                        ],
                        ["ACTION_LIST", "$CARD.currentFace.gameStepEffects.{{$GAME.stepId}}.actionList"]
                    ]
                ]]
            },
            "removeCommittedWillpower": {  
                "_comment": "Remove committed willpower from a character leaving play",
                "type": "trigger", 
                "listenTo": ["/cardById/*/inPlay"],
                "condition": ["AND", ["NOT", "$TARGET.inPlay"], ["PREV", "$TARGET.inPlay"], ["PREV", "$TARGET.committed"], ["NOT_EQUAL", "$TARGET.controller", "shared"]],
                "then": [
                    ["VAR", "$QUESTING_STAT", "$GAME.questingStat"],
                    ["VAR", "$PREV_TARGET", ["PREV", "$TARGET"]],
                    ["VAR", "$COMMITTED_VAL", ["ADD", "$PREV_TARGET.currentFace.$QUESTING_STAT", "$PREV_TARGET.tokens.$QUESTING_STAT"]],
                    ["DECREASE_VAL", "/playerData/$TARGET.controller/willpower", "$COMMITTED_VAL"],
                    ["LOG", "└── ", "$TARGET.controller", " lost ", "$COMMITTED_VAL", " ", "$QUESTING_STAT", " toward the quest."]
                ]
            },
            "adjustCommittedWillpower": { 
                "_comment": "Adjust committed value when token is adjusted",
                "type": "trigger", 
                "listenTo": ["/cardById/*/tokens/willpower"],
                "condition": ["AND", "$TARGET.committed", "$TARGET.inPlay", ["EQUAL", "$GAME.questingStat", "willpower"], ["NOT_EQUAL", "$TARGET.controller", "shared"]],
                "then": [
                    ["VAR", "$DELTA", ["SUBTRACT", "$TARGET.tokens.willpower", ["PREV", "$TARGET.tokens.willpower"]]],
                    ["VAR", "$QUESTING_STAT", "$GAME.questingStat"],
                    ["INCREASE_VAL", "/playerData/$TARGET.controller/willpower", "$DELTA"]
                ]
            },
            "adjustCommittedAttack": { 
                "_comment": "Adjust committed value when token is adjusted",
                "type": "trigger", 
                "listenTo": ["/cardById/*/tokens/attack"],
                "condition": ["AND", "$TARGET.committed", ["EQUAL", "$GAME.questingStat", "attack"], ["NOT_EQUAL", "$TARGET.controller", "shared"]],
                "then": [
                    ["VAR", "$DELTA", ["SUBTRACT", "$TARGET.tokens.attack", ["PREV", "$TARGET.tokens.attack"]]],
                    ["VAR", "$QUESTING_STAT", "$GAME.questingStat"],
                    ["INCREASE_VAL", "/playerData/$TARGET.controller/willpower", "$DELTA"]
                ]
            },
            "adjustCommittedDefense": { 
                "_comment": "Adjust committed value when token is adjusted",
                "type": "trigger", 
                "listenTo": ["/cardById/*/tokens/defense"],
                "condition": ["AND", "$TARGET.committed", ["EQUAL", "$GAME.questingStat", "defense"], ["NOT_EQUAL", "$TARGET.controller", "shared"]],
                "then": [
                    ["VAR", "$DELTA", ["SUBTRACT", "$TARGET.tokens.defense", ["PREV", "$TARGET.tokens.defense"]]],
                    ["VAR", "$QUESTING_STAT", "$GAME.questingStat"],
                    ["INCREASE_VAL", "/playerData/$TARGET.controller/willpower", "$DELTA"]
                ]
            },
            "adjustStagingThreatWhenCardAddedRemoved": { 
                "_comment": "Adjust staging threat when a card is added/removed",
                "type": "trigger", 
                "listenTo": ["/cardById/*/groupId"],
                "condition": ["OR", 
                                ["AND", ["NOT_EQUAL", "$TARGET.currentSide", null], ["GREATER_THAN", "$TARGET.currentFace.threat", 0], ["NOT_EQUAL", "$TARGET.groupId", "sharedStagingArea"], ["PREV", ["EQUAL", "$TARGET.groupId", "sharedStagingArea"]]],
                                ["AND", ["NOT_EQUAL", "$TARGET.currentSide", null], ["GREATER_THAN", "$TARGET.currentFace.threat", 0], ["EQUAL", "$TARGET.groupId", "sharedStagingArea"], ["PREV", ["NOT_EQUAL", "$TARGET.groupId", "sharedStagingArea"]]]
                            ],
                "then": ["COMPUTE_STAGING_THREAT"] 
            },
            "adjustStagingThreatWhenCardFlipped": { 
                "_comment": "Adjust staging threat when a staging card is flipped",
                "type": "trigger", 
                "listenTo": ["/cardById/*/currentSide"],
                "condition": ["AND", 
                                ["EQUAL", "$TARGET.groupId", "sharedStagingArea"], 
                                ["NOT_EQUAL", "$TARGET.currentSide", ["PREV", "$TARGET.currentSide"]]
                            ],
                "then": ["COMPUTE_STAGING_THREAT"]
            },
            "adjustStagingThreatWhenThreatTokenAddedRemoved": { 
                "_comment": "Adjust staging threat when a threat token is added/removed",
                "type": "trigger", 
                "listenTo": ["/cardById/*/tokens/threat"],
                "condition": ["AND", ["EQUAL", "$TARGET.groupId", "sharedStagingArea"]],
                "then": [
                    ["VAR", "$DELTA", ["SUBTRACT", "$TARGET.tokens.threat", ["PREV", "$TARGET.tokens.threat"]]],
                    ["INCREASE_VAL", "/stagingThreat", "$DELTA"]
                ]
            },
            "computeQuestingProgress": { 
                "_comment": "Adjust expected progress",
                "type": "trigger", 
                "listenTo": ["/stagingThreat", "/playerData/*/willpower"],
                "condition": ["TRUE"],
                "then": [
                    ["VAR", "$TOTAL_QUESTING", 0],
                    ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                        ["INCREASE_VAR", "$TOTAL_QUESTING", "$GAME.playerData.$PLAYER_I.willpower"]
                    ]],
                    ["VAR", "$EXPECTED_PROGRESS", ["SUBTRACT", "$TOTAL_QUESTING", "$GAME.stagingThreat"]],
                    ["SET", "/questProgress", "$EXPECTED_PROGRESS"]
                ]
            },
            "turnCardsRed": { 
                "_comment": "Turn cards red when they have 0 hit points left",
                "type": "passive", 
                "listenTo": ["/cardById/*/tokens/damage", "/cardById/*/tokens/hitPoints", "/cardById/*/tokens"],
                "condition": ["AND", 
                    ["NOT_EQUAL", "$TARGET.currentFace.hitPoints", null],
                    ["GREATER_THAN", "$TARGET.tokens.damage", 0],
                    ["GREATER_EQUAL", "$TARGET.tokens.damage", ["ADD", "$TARGET.currentFace.hitPoints", "$TARGET.tokens.hitPoints"]]
                ],
                "onDo": [
                    ["LOG", "└── ", "$TARGET.currentFace.name", " is destroyed."],
                    ["SET", "/cardById/$TARGET_ID/borderColor", "red"]
                ],
                "offDo": [
                    ["SET", "/cardById/$TARGET_ID/borderColor", null]
                ]
            },
            "turnCardsGreen": { 
                "_comment": "Turn cards green when they have 0 quest points left",
                "type": "passive", 
                "listenTo": ["/cardById/*/tokens/progress", "/cardById/*/tokens/hitPoints", "/cardById/*/tokens"],
                "condition": ["AND", 
                    ["NOT_EQUAL", "$TARGET.currentFace.questPoints", null],
                    ["GREATER_THAN", "$TARGET.tokens.progress", 0],
                    ["GREATER_EQUAL", "$TARGET.tokens.progress", ["ADD", "$TARGET.currentFace.questPoints", "$TARGET.tokens.hitPoints"]]
                ],
                "onDo": [
                    ["LOG", "└── ", "$TARGET.currentFace.name", " is explored."],
                    ["SET", "/cardById/$TARGET_ID/borderColor", "green"]
                ],
                "offDo": [
                    ["SET", "/cardById/$TARGET_ID/borderColor", null]
                ]
            },
            "turnCurrentQuestBlue": { 
                "_comment": "Turn cards green when they have 0 quest points left",
                "type": "trigger", 
                "listenTo": ["/currentQuestCardId"],
                "condition": ["TRUE"],
                "then": [
                    ["VAR", "$PREV_CURRENT_QUEST_CARD_ID", ["PREV", "$GAME.currentQuestCardId"]],
                    ["VAR", "$CURRENT_QUEST_CARD_ID", "$GAME.currentQuestCardId"],
                    ["COND",
                        ["DEFINED", "$PREV_CURRENT_QUEST_CARD_ID"],
                        ["SET", "/cardById/$PREV_CURRENT_QUEST_CARD_ID/borderColor", null]
                    ],
                    ["COND",
                        ["DEFINED", "$CURRENT_QUEST_CARD_ID"],
                        ["SET", "/cardById/$CURRENT_QUEST_CARD_ID/borderColor", "blue"]
                    ]
                ]
            }
        }
    }
}