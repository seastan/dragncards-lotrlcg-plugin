{
    "actionLists": {
        "skipToNextPlanningPhase": [
            ["END_THE_QUEST_PHASE"],
            ["VAR", "$STEP_ID", "$GAME.stepId"],
            ["COND",
                ["AND", 
                    ["NOT_EQUAL", "$GAME.roundNumber", 0],
                    ["NOT_EQUAL", "$GAME_DEF.steps.$STEP_ID.phaseId", "Refresh"],
                    ["NOT_EQUAL", "$GAME_DEF.steps.$STEP_ID.phaseId", "Resource"]
                ],
                [["ACTION_LIST", "skipToRefreshPhase"]]
            ],
            ["LOG", "{{$ALIAS_N}} advanced to the next planning phase."],
            ["INCREASE_VAL", "/roundNumber", 1],
            ["SET", "/stepId", "1.R"],
            ["SET", "/stepId", "2.P"]
        ],
        "skipToDealShadowsStep": [
            ["LOG", "{{$ALIAS_N}} advanced to the deal shadows step."],
            ["END_THE_QUEST_PHASE"],
            ["SET", "/stepId", "6.2"]
        ],
        "skipToDiscardShadowsStep": [
            ["LOG", "{{$ALIAS_N}} advanced to the end of the combat phase."],
            ["END_THE_QUEST_PHASE"],
            ["SET", "/stepId", "6.11"]
        ],
        "skipToRefreshPhase": [
            ["LOG", "{{$ALIAS_N}} advanced to the refresh phase."],
            ["END_THE_QUEST_PHASE"],
            ["SET", "/stepId", "7.R"]
        ],
        "revealEncounterFacedown": [
            ["REVEAL_ENCOUNTER", "B"]
        ],
        "revealSecondaryFacedown": [
            ["VAR", "$REVEAL_FACEDOWN", true],
            ["ACTION_LIST", "revealSecondary"]
        ],
        "revealEncounter": [
            ["COND", 
                ["AND", "$GAME.gameStepAutomation", 
                    ["OR",
                        ["EQUAL", "$GAME.roundAdvancementFunction", "commitCharacters"],
                        ["EQUAL", "$GAME.roundAdvancementFunction", "commitOrReveal"]
                    ]
                ],
                [
                    ["ADVANCE_THROUGH_ROUND_BUT_STOP_AT_TRIGGERS", "3.3"],
                    ["COND", 
                        ["EQUAL", "$GAME.stepId", "3.3"],
                        ["REVEAL_ENCOUNTER", "A"]
                    ]
                ],
                ["TRUE"],
                ["REVEAL_ENCOUNTER", "A"]
            ]
        ],
        "revealSecondary": [
            ["COND",
                ["EQUAL", ["LENGTH", "$GAME.groupById.sharedEncounterDeck2.stackIds"], 0],
                ["LOG", "$ALIAS_N", " tried to reveal a card from the second encounter deck, but it's empty."],
                true,
                [
                    ["VAR", "$CARD_ID", ["GET_CARD_ID", "sharedEncounterDeck2", 0, 0]],
                    ["MOVE_CARD", "$CARD_ID", "sharedStagingArea", -1, 0], 
                    ["COND",
                        ["DEFINED", "$REVEAL_FACEDOWN"],
                        ["SET", "/cardById/$CARD_ID/currentSide", "B"]
                    ],
                    ["LOG", "{{$ALIAS_N}} revealed {{$GAME.cardById.$CARD_ID.currentFace.name}}."]
                ]
            ]
        ],
        "toggleMap": [
            ["COND", 
                "$GAME.playerData.$PLAYER_N.layout.regions.sharedMap.visible",
                [
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedMap/visible", false],
                    ["LOG", "$ALIAS_N", " hid the map."]
                ],
                ["TRUE"],
                [
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedMap/visible", true],
                    ["LOG", "$ALIAS_N", " is looking at the map."]
                ]
            ]
        ],
        "toggleExtra": [
            ["COND", 
                "$GAME.playerData.$PLAYER_N.layout.regions.sharedExtra1.visible",
                [
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedExtra1/visible", false],
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedExtra2/visible", false],
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedExtra3/visible", false],
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedExtra4/visible", false],
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedExtra5/visible", false],
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedExtra6/visible", false],
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedExtra7/visible", false],
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedExtra8/visible", false],
                    ["LOG", "$ALIAS_N", " hid the extra regions."]
                ],
                ["TRUE"],
                [
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedExtra1/visible", true],
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedExtra2/visible", true],
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedExtra3/visible", true],
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedExtra4/visible", true],
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedExtra5/visible", true],
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedExtra6/visible", true],
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedExtra7/visible", true],
                    ["SET", "/playerData/$PLAYER_N/layout/regions/sharedExtra8/visible", true],
                    ["LOG", "$ALIAS_N", " is looking at the extra regions."]
                ]
            ]
        ],
        "drawCard": [
            ["DRAW_CARD"],
            ["LOG", "$ALIAS_N", " drew 1 card."]
        ],
        "discardShadows": [
            ["FOR_EACH_KEY_VAL", "$CARD_ID", "$CARD", "$CARD_BY_ID",
                [
                    ["COND",
                        ["EQUAL", "$CARD.rotation", -30],
                        [
                            ["VAR", "$ACTIVE_CARD_ID", "$CARD_ID"],
                            ["ACTION_LIST", "discardCard"]
                        ]
                    ]
                ]
            ]
        ],
        "mulligan": [
            ["LOG", "$ALIAS_N", " performed a mulligan."],
            ["VAR", "$HAND_GROUP_ID", ["JOIN_STRING", "$PLAYER_N", "Hand"]],
            ["VAR", "$DECK_GROUP_ID", ["JOIN_STRING", "$PLAYER_N", "Deck"]],
            ["VAR", "$HAND_SIZE", ["LENGTH", "$GAME.groupById.$HAND_GROUP_ID.stackIds"]],
            ["MOVE_STACKS", "$HAND_GROUP_ID", "$DECK_GROUP_ID", "$HAND_SIZE", "shuffle"],
            ["DRAW_CARD", "$HAND_SIZE"]
        ],
        "increaseThreat": [
            ["INCREASE_VAL", "/playerData/$PLAYER_N/threat", 1],
            ["LOG", "$ALIAS_N", " increased their threat by 1."]
        ],
        "increaseThreatAll": [
            ["FOR_EACH_KEY_VAL", "$PLAYER_I", "$PLAYER_I_DATA", "$GAME.playerData",
                ["INCREASE_VAL", "/playerData/$PLAYER_I/threat", 1]
            ],
            ["LOG", "$ALIAS_N", " increased each player's threat by 1."]
        ],
        "decreaseThreat": [
            ["INCREASE_VAL", "/playerData/$PLAYER_N/threat", -1],
            ["LOG", "$ALIAS_N", " decreased their threat by 1."]
        ],
        "decreaseThreatAll": [
            ["FOR_EACH_KEY_VAL", "$PLAYER_I", "$PLAYER_I_DATA", "$GAME.playerData",
                ["INCREASE_VAL", "/playerData/$PLAYER_I/threat", -1]
            ],
            ["LOG", "$ALIAS_N", " increased each player's threat by 1."]
        ],
        "drawNextSeat": [
            ["VAR", "$PLAYER_N", ["NEXT_PLAYER", "$PLAYER_N"]],
            ["LOG", "$ALIAS_N", " drew 1 card."],
            ["DRAW_CARD"]
        ],
        "zeroTokens": [
            ["SET", "/cardById/$ACTIVE_CARD_ID/tokens", {}],
            ["LOG", "$ALIAS_N", " removed all tokens from ", "$ACTIVE_FACE.name", "."]
        ],
        "hotkeyA": [
            ["COND",
                ["EQUAL", "$ACTIVE_FACE.type", "Location"],
                [
                    ["COND", 
                        ["AND", "$GAME.gameStepAutomation", ["EQUAL", "$GAME.roundAdvancementFunction", "advanceToTravel"]],
                        [
                            ["ADVANCE_THROUGH_ROUND_BUT_STOP_AT_TRIGGERS", "4.2"],
                            ["COND",
                                ["EQUAL", "$GAME.stepId", "4.2"],
                                [
                                    ["LOG", "$ALIAS_N", " made ", "$ACTIVE_FACE.name", " active."],
                                    ["MOVE_STACK", "$ACTIVE_CARD.stackId", "sharedActiveLocation", 0]
                                ]
                            ]
                        ],
                        ["TRUE"],
                        [
                            ["LOG", "$ALIAS_N", " made ", "$ACTIVE_FACE.name", " active."],
                            ["MOVE_STACK", "$ACTIVE_CARD.stackId", "sharedActiveLocation", 0]
                        ]
                    ]

                ],
                ["TRUE"],
                ["TOGGLE_EXHAUST", "$ACTIVE_CARD"]
            ]
        ],
        "flipCard": [
            ["COND",
                ["EQUAL", "$ACTIVE_CARD.currentSide", "A"],
                [
                    ["LOG", "$ALIAS_N", " flipped ", "$ACTIVE_FACE.name", " facedown."],
                    ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "B"]    
                ],
                true,
                [
                    ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "A"],
                    ["LOG", "$ALIAS_N", " flipped ", "$ACTIVE_FACE.name", " faceup."]
                ]
            ]
        ],
        "toggleCommit": [
            ["COND",
                ["OR",
                    ["EQUAL", "$ACTIVE_FACE.type", "Quest"],
                    ["EQUAL", "$ACTIVE_FACE.type", "Side Quest"]
                ],
                [
                    ["COND", 
                        ["AND", "$GAME.gameStepAutomation", ["EQUAL", "$GAME.roundAdvancementFunction", "selectCurrentQuest"]],
                        [
                            ["ADVANCE_THROUGH_ROUND_BUT_STOP_AT_TRIGGERS", "3.1"],
                            ["COND", 
                                ["EQUAL", "$GAME.stepId", "3.1"],
                                [
                                    ["LOG", "$ALIAS_N", " selected ", "$ACTIVE_FACE.name", " as the current quest."],
                                    ["SET", "/currentQuestCardId", "$ACTIVE_CARD_ID"]
                                ]
                            ]
                        ],
                        ["TRUE"],
                        [
                            ["LOG", "{{$ALIAS_N}} selected {{$ACTIVE_FACE.name}} as the current quest."],
                            ["SET", "/currentQuestCardId", "$ACTIVE_CARD_ID"]
                        ]
                    ]
                ],
                ["TRUE"],
                [
                    ["ACTION_LIST", "toggleCommitWithoutExhausting"],
                    ["COND",
                        ["AND", "$ACTIVE_CARD.committed", "$ACTIVE_CARD.inPlay", ["NOT", "$ACTIVE_CARD.exhausted"]],
                        ["TOGGLE_EXHAUST", "$ACTIVE_CARD"],
                        ["AND", ["NOT", "$ACTIVE_CARD.committed"], "$ACTIVE_CARD.inPlay", "$ACTIVE_CARD.exhausted"],
                        ["TOGGLE_EXHAUST", "$ACTIVE_CARD"]
                    ]
                ]
            ]
        ],
        "toggleCommitWithoutExhausting": [
            ["COND", 
                ["AND", "$GAME.gameStepAutomation", ["EQUAL", "$GAME.roundAdvancementFunction", "commitCharacters"]],
                ["ADVANCE_THROUGH_ROUND_BUT_STOP_AT_TRIGGERS", "3.2"]
            ],
            ["COND",
                ["AND", ["EQUAL", "$ACTIVE_CARD.committed", false], "$ACTIVE_CARD.inPlay"],
                [
                    ["VAR", "$QUESTING_STAT", "$GAME.questingStat"],
                    ["VAR", "$QUESTING_AMOUNT", ["ADD", "$ACTIVE_FACE.$QUESTING_STAT", "$ACTIVE_CARD.tokens.$QUESTING_STAT"]],
                    ["LOG", "$ALIAS_N", " committed ", "$ACTIVE_FACE.name", " (", "$QUESTING_AMOUNT", ") to the quest."],
                    ["SET", "/cardById/$ACTIVE_CARD_ID/committed", true],
                    ["SET", "/cardById/$ACTIVE_CARD_ID/tokens/questing", "$QUESTING_AMOUNT"],
                    ["INCREASE_VAL", "/playerData/$ACTIVE_CARD.controller/willpower", "$QUESTING_AMOUNT"]
                ],
                ["AND", ["EQUAL", "$ACTIVE_CARD.committed", true], "$ACTIVE_CARD.inPlay"],
                [
                    ["VAR", "$QUESTING_AMOUNT", "$ACTIVE_CARD.tokens.questing"],
                    ["LOG", "$ALIAS_N", " removed ", "$ACTIVE_FACE.name", " (", "$QUESTING_AMOUNT", ") from the quest."],
                    ["SET", "/cardById/$ACTIVE_CARD_ID/committed", false],
                    ["SET", "/cardById/$ACTIVE_CARD_ID/tokens/questing", 0],
                    ["DECREASE_VAL", "/playerData/$ACTIVE_CARD.controller/willpower", "$QUESTING_AMOUNT"]
                ]
            ]
        ],
        "dealShadow": [
            ["COND",
                "$ACTIVE_CARD.inPlay",
                ["COND",
                    ["EQUAL", ["LENGTH", "$GAME.groupById.sharedEncounterDeck.stackIds"], 0],
                    ["LOG", "$ALIAS_N", " tried to deal a shadow card but the encounter deck is empty."],
                    true,
                    [
                        ["VAR", "$SHADOW_CARD_ID", ["GET_CARD_ID", "sharedEncounterDeck", 0, 0]],
                        ["SET", "/cardById/$SHADOW_CARD_ID/rotation", -30],
                        ["ATTACH_CARD", "$SHADOW_CARD_ID", "$ACTIVE_CARD_ID"],
                        ["SET", "/cardById/$SHADOW_CARD_ID/currentSide", "B"],
                        ["LOG", "$ALIAS_N", " dealt a shadow card to ", "$ACTIVE_FACE.name", "."]
                    ]
                ]
            ]
        ],
        "sendToBack": [
            ["COND",
                ["GREATER_THAN", "$ACTIVE_CARD.cardIndex", 0],
                [            
                    ["VAR", "$ACTIVE_GROUP_ID", "$ACTIVE_CARD.groupId"],
                    ["VAR", "$ACTIVE_STACK_INDEX", "$ACTIVE_CARD.stackIndex"],
                    ["VAR", "$CARD_ID", ["GET_CARD_ID", "$ACTIVE_GROUP_ID", "$ACTIVE_STACK_INDEX", 0]],
                    ["ATTACH_CARD", "$ACTIVE_CARD_ID", "$CARD_ID"],
                    ["LOG", "{{$ALIAS_N}} moved {{$ACTIVE_FACE.name}}."]
                ]
            ]
        ],
        "addDamage": [
            ["INCREASE_VAL", "/cardById/$ACTIVE_CARD_ID/tokens/damage", 1],
            ["LOG", "$ALIAS_N", " added 1 damage to ", "$ACTIVE_FACE.name", "."]
        ],
        "addProgress": [
            ["INCREASE_VAL", "/cardById/$ACTIVE_CARD_ID/tokens/progress", 1],
            ["LOG", "$ALIAS_N", " added 1 progress to ", "$ACTIVE_FACE.name", "."]
        ],
        "addToVictoryDisplay": [
            ["MOVE_CARD", "$ACTIVE_CARD_ID", "sharedVictory", 0],
            ["LOG", "$ALIAS_N", " added ", "$ACTIVE_FACE.name", " to the victory display."]
        ],
        "calculateScore": [
            ["VAR", "$TOTAL_THREAT", 0],
            ["FOR_EACH_VAL", "$PLAYER_I", "$PLAYER_ORDER", [
                ["INCREASE_VAR", "$TOTAL_THREAT", "$GAME.playerData.$PLAYER_I.threat"]
            ]],
            ["LOG", "Total threat: ", "$TOTAL_THREAT"],
            ["VAR", "$FALLEN_HERO_COST", 0],
            ["VAR", "$DAMAGE_ON_HEROES", 0],
            ["VAR", "$TOTAL_VICTORY_POINTS", 0],
            ["FOR_EACH_KEY_VAL", "$CARD_ID", "$CARD", "$CARD_BY_ID", [
                ["COND", 
                    ["AND",
                        ["IN_STRING", "$CARD.groupId", "Discard"],
                        ["EQUAL", "$CARD.currentFace.type", "Hero"]
                    ],
                    ["INCREASE_VAR", "$FALLEN_HERO_COST", "$CARD.sides.A.cost"]
                ],
                ["COND",
                    ["AND",
                        "$CARD.inPlay",
                        ["EQUAL", "$CARD.currentFace.type", "Hero"]
                    ],
                    ["INCREASE_VAR", "$DAMAGE_ON_HEROES", "$CARD.tokens.damage"]
                ],
                ["COND",
                    ["EQUAL", "$CARD.groupId", "sharedVictory"],
                    ["INCREASE_VAR", "$TOTAL_VICTORY_POINTS", "$CARD.sides.A.victoryPoints"]
                ]
            ]],
            ["LOG", "Fallen hero cost: ", "$FALLEN_HERO_COST"],
            ["LOG", "Damage on heroes: ", "$DAMAGE_ON_HEROES"],
            ["LOG", "Number of rounds: ", "$GAME.roundNumber"],
            ["LOG", "Victory points: ", "$TOTAL_VICTORY_POINTS"],
            ["VAR", "$FINAL_SCORE", ["SUBTRACT", ["ADD", ["ADD", "$FALLEN_HERO_COST", "$TOTAL_THREAT"], ["ADD", "$DAMAGE_ON_HEROES", ["MULTIPLY", "$GAME.roundNumber", 10]]], "$TOTAL_VICTORY_POINTS"]],
            ["LOG", "Final score: ", "$FINAL_SCORE"]
        ],
        "discardCard": [
            ["VAR", "$ROTATION", "$ACTIVE_CARD.rotation"],
            ["COND",
                ["EQUAL", "$ACTIVE_CARD.cardIndex", 0],
                [
                    ["VAR", "$STACK_ID", ["GET_STACK_ID", "$ACTIVE_CARD.groupId", "$ACTIVE_CARD.stackIndex"]],
                    ["VAR", "$CARD_IDS", "$GAME.stackById.$STACK_ID.cardIds"],
                    ["FOR_EACH_VAL", "$CARD_ID", "$CARD_IDS",
                        [
                            ["VAR", "$CARD", "$GAME.cardById.$CARD_ID"],
                            ["COND",
                                ["EQUAL", "$CARD.discardGroupId", null],
                                ["LOG", "$ALIAS_N", " failed to discard ", "$CARD.currentFace.name", " because it is not associated with a discard pile. Please drag the card instead."],
                                true,
                                [
                                    ["VAR", "$CURRENT_SIDE", "$CARD.currentSide"],
                                    ["LOG", "$ALIAS_N", " discarded ", "$CARD.sides.A.name", "."],
                                    ["MOVE_CARD", "$CARD_ID", "$CARD.discardGroupId", 0],
                                    ["COND",
                                        ["AND",
                                            ["NOT_EQUAL", "$CARD.currentFace.victoryPoints", null],
                                            ["NOT_EQUAL", "$ROTATION", -30]
                                        ],
                                        ["PROMPT", "$PLAYER_N", "victoryDisplay", "$CARD_ID"]
                                    ]
                                ]
                            ]
                        ]
                    ]
                ],
                true,
                [
                    ["COND",
                        ["EQUAL", "$ACTIVE_CARD.discardGroupId", null],
                        ["LOG", "$ALIAS_N", " failed to discard ", "$ACTIVE_FACE.name", " because it is not associated with a discard pile. Please drag the card instead."],
                        true,
                        [
                            ["LOG", "$ALIAS_N", " discarded ", "$ACTIVE_CARD.sides.A.name", "."],
                            ["MOVE_CARD", "$ACTIVE_CARD_ID", "$ACTIVE_CARD.discardGroupId", 0],
                            ["COND",
                                ["AND",
                                    ["NOT_EQUAL", "$ACTIVE_FACE.victoryPoints", null],
                                    ["NOT_EQUAL", "$ROTATION", -30]
                                ],
                                ["PROMPT", "$PLAYER_N", "victoryDisplay", "$ACTIVE_CARD_ID"]
                            ]
                        ]
                    ]
                ]
            ],
            ["COND",
                ["EQUAL", "$ACTIVE_FACE.type", "Quest"],
                ["COND", 
                    ["EQUAL", ["LENGTH", "$GAME.groupById.sharedQuestDeck.stackIds"], 0],
                    ["LOG", "The players won the game!"],
                    true,
                    [
                        ["MOVE_STACK", ["GET_STACK_ID", "sharedQuestDeck", 0], "sharedMainQuest", 0],
                        ["LOG", "$ALIAS_N", " advanced the quest."],
                        ["COND",
                            ["AND",
                                ["NOT_EQUAL", "$ACTIVE_FACE.victoryPoints", null],
                                ["NOT_EQUAL", "$ROTATION", -30]
                            ],
                            ["PROMPT", "$PLAYER_N", "victoryDisplay", "$ACTIVE_CARD_ID"]
                        ]
                    ]
                ]
            ]
        ],
        "shuffleIntoDeck": [
            ["MOVE_CARD", "$ACTIVE_CARD_ID", "$ACTIVE_CARD.deckGroupId", 0],
            ["VAR", "$GROUP_ID", "$ACTIVE_CARD.deckGroupId"],
            ["SHUFFLE_GROUP", "$GROUP_ID"],
            ["LOG", "$ALIAS_N", " shuffled ", "$ACTIVE_FACE.name", " into ", "$GAME.groupById.$GROUP_ID.label", "."]
        ],
        "detach": [
            ["COND",
                ["GREATER_THAN", "$ACTIVE_CARD.cardIndex", 0],
                [
                    ["MOVE_CARD", "$ACTIVE_CARD_ID", "$ACTIVE_CARD.groupId", ["ADD", "$ACTIVE_CARD.stackIndex", 1]],
                    ["LOG", "$ALIAS_N", " detached ", "$ACTIVE_FACE.name", "."],
                    ["COND", 
                        ["EQUAL", "$ACTIVE_CARD.rotation", -30],
                        ["SET", "/cardById/$ACTIVE_CARD_ID/rotation", 0]
                    ]
                ]
            ]
        ],
        "swapSide": [
            ["COND",
                ["GREATER_THAN", "$ACTIVE_CARD.cardIndex", 0],
                ["COND",
                    ["EQUAL", "$ACTIVE_CARD.attachmentDirection", -1],
                    ["SET", "/cardById/$ACTIVE_CARD_ID/attachmentDirection", 1],
                    true,
                    ["SET", "/cardById/$ACTIVE_CARD_ID/attachmentDirection", -1]
                ]
            ]
        ],
        "swapWithTop": [
            ["VAR", "$ORIG_GROUP_ID", "$ACTIVE_CARD.groupId"],
            ["VAR", "$DECK_GROUP_ID", "$ACTIVE_CARD.deckGroupId"],
            ["VAR", "$TOP_STACK_ID", "$GAME.groupById.$DECK_GROUP_ID.stackIds.[0]"],
            ["VAR", "$TOP_CARD_ID", "$GAME.stackById.$TOP_STACK_ID.cardIds.[0]"],
            ["VAR", "$TOP_CARD", "$GAME.cardById.$TOP_CARD_ID"],
            ["VAR", "$ACTIVE_STACK_INDEX", "$ACTIVE_CARD.stackIndex"],
            ["VAR", "$ACTIVE_CARD_INDEX", "$ACTIVE_CARD.cardIndex"],
            ["LOG", "{{$ALIAS_N}} swapped {{$ACTIVE_CARD.currentFace.name}} with the top card of {{$GAME.groupById.$DECK_GROUP_ID.label}}."],
            ["MOVE_CARD", "$ACTIVE_CARD_ID", "$TOP_CARD.deckGroupId", "$TOP_CARD.stackIndex", "$TOP_CARD.cardIndex"],
            ["MOVE_CARD", "$TOP_CARD_ID", "$ORIG_GROUP_ID", "$ACTIVE_STACK_INDEX", "$ACTIVE_CARD_INDEX"]
        ],
        "raiseAllThreat": [
            ["LOG", "{{$ALIAS_N}} raised each player's threat by 1."],
            ["FOR_EACH_VAL", "$PLAYER_I", "$$PLAYER_ORDER", [
                ["INCREASE_VAL", "/playerData/$PLAYER_I/threat", 1]
            ]]
        ],
        "reduceAllThreat": [
            ["LOG", "{{$ALIAS_N}} reduced each player's threat by 1."],
            ["FOR_EACH_VAL", "$PLAYER_I", "$$PLAYER_ORDER", [
                ["INCREASE_VAL", "/playerData/$PLAYER_I/threat", -1]
            ]]
        ],
        "setCardsDrawn": [
            ["INPUT", "integer", "$VAL", "Set the number of cards drawn during resource phase:", 1],
            ["LOG", "$ALIAS_N", " set number of cards drawn during the Resource Phase to ", "$VAL", "."],
            ["SET", "/playerData/$PLAYER_N/cardsDrawn", "$VAL"]
        ],
        "setQuestNormal": [
            ["LOG", "$ALIAS_N", " set the questing type to Normal."],
            ["SET", "/questingStat", "willpower"]
        ],
        "setQuestBattle": [
            ["LOG", "$ALIAS_N", " set the questing type to Battle."],
            ["SET", "/questingStat", "attack"]
        ],
        "setQuestSiege": [
            ["LOG", "$ALIAS_N", " set the questing type to Siege."],
            ["SET", "/questingStat", "defense"]
        ],
        "shuffleGroupIntoDeck": [
            ["VAR", "$DEST_GROUP_ID", "$ACTIVE_GROUP.onCardEnter.deckGroupId"],
            ["VAR", "$DEST_GROUP", "$GAME.groupById.$DEST_GROUP_ID"],
            ["LOG", "$ALIAS_N", " shuffled ", "$ACTIVE_GROUP.label", " into ", "$DEST_GROUP.label", "."],
            ["MOVE_STACKS", "$ACTIVE_GROUP_ID", "$DEST_GROUP_ID"]
        ],
        "togglePreventRefresh": [
            ["COND",
                ["EQUAL", "$ACTIVE_CARD.preventRefresh", true],
                [
                    ["LOG", "$ALIAS_N", " unlocked ", "$ACTIVE_FACE.name", "."],
                    ["SET", "/cardById/$ACTIVE_CARD_ID/preventRefresh", false]
                ],
                true,
                [
                    ["SET", "/cardById/$ACTIVE_CARD_ID/preventRefresh", true],
                    ["LOG", "$ALIAS_N", " preventRefresh ", "$ACTIVE_FACE.name", "."]
                ]
            ]
        ]

    }
}